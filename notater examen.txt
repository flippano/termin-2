ryddet opp i kode, ryddet opp i folders


start hvis fram gammel nettside, og se hva som er gjort, og hva som kan gjøres bedre. 
    Fjerning av Duplikate SQL-forespørsler:

        Hva ble gjort:
            Fjernet duplikate SQL-forespørsler som henter de samme postene flere ganger.
        Hvorfor:
            Redundante forespørsler kan redusere ytelsen og gjøre koden vanskeligere å vedlikeholde.
        Hva kan skje uten fiksen:
            Unødvendige databasekall kan føre til redusert ytelse og potensielle feil på grunn av ubrukelig data.

    Beskyttelse mot SQL-injeksjon:

        Hva ble gjort:
            Brukte forberedte uttalelser ($stmt->bind_param) for å hindre SQL-injeksjon.
        Hvorfor:
            Forberedte uttalelser beskytter mot SQL-injeksjonsangrep, hvor ondsinnede brukere kan manipulere SQL-forespørsler.
        Hva kan skje uten fiksen:
            Uten forberedte uttalelser kan applikasjonen være sårbar for SQL-injeksjonsangrep, noe som kan føre til kompromittering av databaseinnholdet.

    Bedre Håndtering av Økter:

        Hva ble gjort:
            Sjekket for en gyldig økt umiddelbart etter tilkobling til databasen.
        Hvorfor:
            For å sikre at bare autoriserte brukere har tilgang til siden.
        Hva kan skje uten fiksen:
            Uautoriserte brukere kan få tilgang til beskyttede sider, noe som kan føre til sikkerhetsbrudd.

    Forbedret Feilhåndtering:

        Hva ble gjort:
            La til bedre feilhåndtering ved innlegg av poster og omdirigering ved suksess.
        Hvorfor:
            Gir brukeren tilbakemelding om operasjonens status og forbedrer brukeropplevelsen.
        Hva kan skje uten fiksen:
            Brukere kan bli forvirret hvis de ikke får tilbakemelding på handlingene sine, og feilhåndtering kan bli vanskelig.

    Ryddig og Strukturert Kode:

        Hva ble gjort:
            Konsoliderte POST-håndtering og hentingen av poster til én blokk.
        Hvorfor:
            For å gjøre koden mer lesbar og vedlikeholdbar.
        Hva kan skje uten fiksen:
            Uoversiktlig kode kan føre til feil og gjøre vedlikehold vanskeligere.  

    lagde db_connect:

        hva ble gjort:
            lagde en egen fil for å koble til databasen.
        hvorfor:
            for å gjøre koden mer lesbar og vedlikeholdbar.
        hva kan skje uten fiksen:
            kode kan bli uoversiktlig og vanskelig å vedlikeholde.  

vise gammel kode og forklare hva noen av problemene er.

ssh inn i serveren, start nettside og hvis fram ny nettside.
    ssh svr@svr                    license-citizens.gl.at.ply.gg -p 37905
    cd /var/www/html
    ls
    sudo systemctl start apache2
    exit
    fuck opp med credentials
    ssh igjen
    less /var/log/apache2/error.log
    "oh jeg er dumbass"
    inn i db_connect
    root2
    root
    exit

forklare hva jeg har gjort som endringer, hvordan jeg har gjort de, og hvorfor.

røre på noen lover og regler, og forklare hvorfor de er viktige, og hva jeg har gjort for å følge de.
    Lov om behandling av personopplysninger (personopplysningsloven) med nasjonale tilpasninger og personvernforordningen 
forklare hva slags tak jeg har tatt for å beskyte mot hackere, og exploits

hvise fram repo, og forklare hvordan jeg har brukt git, og hvorfor det er viktig.
    bookmark
    "backups"
    "nyttig"
clone repo, og gjøre en endring, og push endringen til repo.
    cd desktop
    mkdir git
    cd git
    git clone https://github.com/flippano/termin-2.git .
    endring
    git remote add origin https://github.com/flippano/termin-2.git
    git push
lage ny tabell i databasen, mysql dump endringene og push til git og.
    CREATE TABLE Users (
        UserID int NOT NULL AUTO_INCREMENT,
        Username varchar(255) NOT NULL,
        Password varchar(8) NOT NULL,
        PRIMARY KEY (UserID)
    );

    INSERT INTO Users (Username, Password) VALUES ('username', 'password');

    UPDATE Users SET Password = 'newpassword' WHERE Username = 'username';

    DELETE FROM Users WHERE Username = 'username';

    ALTER TABLE Users ADD Email varchar(255);
                      modify

    ALTER TABLE Users DROP COLUMN Email;

    ALTER TABLE Users ADD Email varchar(255) AFTER Username;
                                             FIRST;

    mysqldump -u root -p oppdrag > oppdrag.sql

    mysql -u root -p piss < oppdrag.sql

redigere liten greie i nettsiden, og push til git.
    $greetings = ["Hello", "Hi", "Greetings", "Welcome", "Salutations"];

    $random_greeting = $greetings[array_rand($greetings)];

    echo "<h1>" . $random_greeting . " " . htmlspecialchars($posts[0]['username']) . "</h1>";
    git push


